
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sirish
 */
public class Buyer_page_1 extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
     public Buyer_page_1(String name) {
        initComponents();
       String nam=name;
        jLabel5.setText(nam);
        DefaultTableModel mod= (DefaultTableModel) jTable2.getModel();
        try
            {
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/ip_project","root","admin");
            Statement stmt = (Statement) con.createStatement();
            String d="select * from product;";
            ResultSet rs=stmt.executeQuery(d);
            while(rs.next())
            {
            String n=rs.getString("P_ID");
            String p=rs.getString("Product_Name");
            String q=rs.getString("Seller_Name");
            int pr=rs.getInt("Price");
            String s=rs.getString("Description");
            String i=rs.getString("Product_type");
            String m=rs.getString("Product_Category");
            mod.addRow(new Object[] {n, p, q, pr,s,i,m});
            }
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(this,e.getMessage());
            }
    
     }
     public Buyer_page_1() {
        initComponents();
    }
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Product Name");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Buy Now");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Select Product type");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Select Product Category");

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Product Type:", "TV, Appliances, Electronics", "Clothing", "Home, Kitchen, Pets", "Beauty, Health, Grocery", "Sports, Fitness, Bags, Luggage", "Toys, Baby Products, Kids' Fashion", "Car, Motorbike, Industrial", "Books", "Movies, Music & Video Games", "Gift Cards", " " }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Category:" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Filter");

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setText("on");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Name", "Seller Name", "Price(in Rs.)", "Description", "Type", "Category"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTable2.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTable2ComponentAdded(evt);
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTable2MouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setText("Go to Cart!");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setText("Log out");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton6.setText("MyOrders Page>>");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("**Double Click the Product Name to add to Cart");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("WELCOME TO SMART BUY!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 915, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(8, 8, 8)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addGap(28, 28, 28)
                        .addComponent(jButton2)
                        .addGap(45, 45, 45)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addGap(38, 38, 38))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(38, 38, 38)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(81, 81, 81)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(38, 38, 38)
                                .addComponent(jButton3))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(298, 298, 298)
                        .addComponent(jLabel7)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel5)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton6)
                            .addComponent(jButton2)
                            .addComponent(jButton4))
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addContainerGap())))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 287, Short.MAX_VALUE)
                    .addComponent(jLabel5)
                    .addGap(0, 288, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        if(jComboBox1.getSelectedIndex()==1)
        {
            jComboBox2.removeAllItems();
            jComboBox2.addItem("Select Category:");
            jComboBox2.addItem("Televisions");
            jComboBox2.addItem("Smartphones, Mobile phones and accesories");
            jComboBox2.addItem("Home Entertainment Systems");
            jComboBox2.addItem("Headphones");
            jComboBox2.addItem("Speaker");
            jComboBox2.addItem("MP3, Media Players & Accessories");
            jComboBox2.addItem("Audio & Video Accessories");
            jComboBox2.addItem("Cameras");
            jComboBox2.addItem("DSLR Cameras");
            jComboBox2.addItem("Camera Accessories");
            jComboBox2.addItem("Musical Instruments & Professional Audio");
            jComboBox2.addItem("Gaming Consoles");
            jComboBox2.addItem("Air Conditioners");
            jComboBox2.addItem("Refrigerators");
            jComboBox2.addItem("Washing Machines");
            jComboBox2.addItem("Kitchen & Home Appliances");
            jComboBox2.addItem("Heating & Cooling Appliances");
        }
        else if(jComboBox1.getSelectedIndex()==2)
        {
            jComboBox2.removeAllItems();
            jComboBox2.addItem("Select Category:");
            jComboBox2.addItem("Mens Clothing");
            jComboBox2.addItem("Females Clothing");
        }
        else if(jComboBox1.getSelectedIndex()==3)
        {
            jComboBox2.removeAllItems();
            jComboBox2.addItem("Select Category:");
            jComboBox2.addItem("Kitchen & Dining");
            jComboBox2.addItem("Kitchen Storage & Containers");
            jComboBox2.addItem("Furniture");
            jComboBox2.addItem("Fine Art");
            jComboBox2.addItem("Home Furnishing");
            jComboBox2.addItem("Bedroom Linen");
            jComboBox2.addItem("Home Décor");
            jComboBox2.addItem("Home Storage");
            jComboBox2.addItem("Indoor Lighting");
            jComboBox2.addItem("Home Improvement");
            jComboBox2.addItem("All Home & Kitchen");
            jComboBox2.addItem("Shop by Room");
            jComboBox2.addItem("Home & Kitchen Deals");
            jComboBox2.addItem("Dog supplies");
        }
        else if(jComboBox1.getSelectedIndex()==4)
        {
            jComboBox2.removeAllItems();
            jComboBox2.addItem("Select Category:");
            jComboBox2.addItem("Beauty & Grooming");
            jComboBox2.addItem("Luxury Beauty");
            jComboBox2.addItem("Make-up");
            jComboBox2.addItem("Health & Personal Care");
            jComboBox2.addItem("Household Supplies");
            jComboBox2.addItem("Diet & Nutrition");
            jComboBox2.addItem("Subscribe & Save");
            jComboBox2.addItem("Value Bazaar");
            jComboBox2.addItem("All Grocery & Gourmet Foods");
            jComboBox2.addItem("Beauty Servies");
            jComboBox2.addItem("Home Improvement");
            jComboBox2.addItem("Snack Foods");
        }
        else if(jComboBox1.getSelectedIndex()==5)
        {
            jComboBox2.removeAllItems();
            jComboBox2.addItem("Select Category:");
            jComboBox2.addItem("Cricket");
            jComboBox2.addItem("Badminton");
            jComboBox2.addItem("Cycling");
            jComboBox2.addItem("Football");
            jComboBox2.addItem("Running");
            jComboBox2.addItem("Camping & Hiking");
            jComboBox2.addItem("Yoga");
            jComboBox2.addItem("Strength Training");
            jComboBox2.addItem("Cardio Equipment");
            jComboBox2.addItem("All Exercise & Fitness");
            jComboBox2.addItem("All Sports, Fitness & Outdoors");
            jComboBox2.addItem("Backpacks");
            jComboBox2.addItem("Rucksacks");
            jComboBox2.addItem("Suitcases & Trolley Bags");
            jComboBox2.addItem("Travel Duffles");
            jComboBox2.addItem("Travel Accessories");
            jComboBox2.addItem("Wallets");
        }
        else if(jComboBox1.getSelectedIndex()==6)
        {
            jComboBox2.removeAllItems();
            jComboBox2.addItem("Select Category:");
            jComboBox2.addItem("Toys & Games");
            jComboBox2.addItem("Baby Products");
            jComboBox2.addItem("Diapers");
            jComboBox2.addItem("Baby Wish List");
            jComboBox2.addItem("Toys Gifting Store");
            jComboBox2.addItem("STEM Toys Store");
            jComboBox2.addItem("International Toy Store");
            jComboBox2.addItem("Baby Bath, Skin & Grooming");
            jComboBox2.addItem("Strollers & Prams");
            jComboBox2.addItem("Subscribe & Save");
            jComboBox2.addItem("Kids' Shoes");
            jComboBox2.addItem("School Bags");
            jComboBox2.addItem("Kids' Clothing");
            jComboBox2.addItem("Kids' Watches");
            jComboBox2.addItem("Kids' Fashion");
            jComboBox2.addItem("Baby Fashion");
        }
        else if(jComboBox1.getSelectedIndex()==7)
        {
            jComboBox2.removeAllItems();
            jComboBox2.addItem("Select Category:");
            jComboBox2.addItem("Motorbike Accessories & Parts");
            jComboBox2.addItem("Car Accessories");
            jComboBox2.addItem("Car Electronics");
            jComboBox2.addItem("Car Parts");
            jComboBox2.addItem("Car & Bike Care");
            jComboBox2.addItem("All Car & Motorbike Products");
            jComboBox2.addItem("Test, Measure & Inspect");
            jComboBox2.addItem("Lab & Scientific");
            jComboBox2.addItem("Janitorial & Sanitation Suppliest");
        }
        else if(jComboBox1.getSelectedIndex()==8)
        {
            jComboBox2.removeAllItems();
            jComboBox2.addItem("Select Category:");
            jComboBox2.addItem("Fiction Books");
            jComboBox2.addItem("Editor's Corner");
            jComboBox2.addItem("School Textbooks");
            jComboBox2.addItem("Children's Books");
            jComboBox2.addItem("Exam Central");
            jComboBox2.addItem("Textbooks");
            jComboBox2.addItem("Indian Language Books");
            jComboBox2.addItem("Used Books");
        }
        else if(jComboBox1.getSelectedIndex()==9)
        {
            jComboBox2.removeAllItems();
            jComboBox2.addItem("Select Category:");
            jComboBox2.addItem("Gaming Consoles");
            jComboBox2.addItem("Latest Video Games");
            jComboBox2.addItem("Gaming Accessories");
            jComboBox2.addItem("PC Games");
            jComboBox2.addItem("Video Games Deals");
            jComboBox2.addItem("Film Songs");
            jComboBox2.addItem("Indian Classical");
            jComboBox2.addItem("Musical Instruments & Professional Audio");
            jComboBox2.addItem("Blu-ray");
        }
        else if(jComboBox1.getSelectedIndex()==10)
        {
            jComboBox2.removeAllItems();
            jComboBox2.addItem("Select Category:");
            jComboBox2.addItem("Birthday Gift Cards");
            jComboBox2.addItem("Gift Boxes, Gift Tags, Greeting Cards");
            jComboBox2.addItem("Wedding & Anniversary");
            jComboBox2.addItem("Best Wishes & Thank You");
            jComboBox2.addItem("Corporate Gift Cards");
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Mode_of_Payment ca=new Mode_of_Payment();
        String name=jLabel5.getText();
        ca.jLabel5.setText(name);
        this.setVisible(false);
        ca.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String o=jButton3.getText();
        if(o=="on")
        {
            jButton3.setText("off");
            jLabel1.setEnabled(false);
            jLabel2.setEnabled(false);
            jComboBox1.setEnabled(false);
            jComboBox2.setEnabled(false);
        }
        else 
        {
            jButton3.setText("on");
            jLabel1.setEnabled(true);
            jLabel2.setEnabled(true);
            jComboBox1.setEnabled(true);
            jComboBox2.setEnabled(true);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel mod= (DefaultTableModel) jTable2.getModel();
        int rows=jTable2.getRowCount();
        if(rows>0)
        {
            for(int m=0;m<rows;m++)
            {
                mod.removeRow(0);
            }
        }
        if(jButton3.getText()=="on")
        {
            if(jTextField1.getText().isEmpty())
            {
            String type=(String)jComboBox1.getSelectedItem();
            String cat=(String)jComboBox2.getSelectedItem();
            DefaultTableModel model= (DefaultTableModel) jTable2.getModel();
            try
            {
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/ip_project","root","admin");
            Statement stmt = (Statement) con.createStatement();
            String d="select * from product where Product_Type='"+type+"' and Product_Category='"+cat+"';";
            ResultSet rs=stmt.executeQuery(d);
            while(rs.next())
            {
            String n=rs.getString("P_ID");
            String p=rs.getString("Product_Name");
            String q=rs.getString("Seller_Name");
            int pr=rs.getInt("Price");
            String s=rs.getString("Description");
            String i=rs.getString("Product_type");
            String m=rs.getString("Product_Category");
            model.addRow(new Object[] {n, p, q, pr,s,i,m});
            }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this,e.getMessage());
            }
            }
            else if(jComboBox1.getSelectedIndex()>=1)
            {
                String type=(String)jComboBox1.getSelectedItem();
                String cat=(String)jComboBox2.getSelectedItem();
                String nam=jTextField1.getText();
                DefaultTableModel model= (DefaultTableModel) jTable2.getModel();
          try
            {
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/ip_project","root","admin");
            Statement stmt = (Statement) con.createStatement();
            String d="select * from product where Product_Type='"+type+"' and Product_name like '"+nam+"%';";
            ResultSet rs=stmt.executeQuery(d);
            while(rs.next())
            {
            String n=rs.getString("P_ID");
            String p=rs.getString("Product_Name");
            String q=rs.getString("Seller_Name");
            int pr=rs.getInt("Price");
            String s=rs.getString("Description");
            String i=rs.getString("Product_type");
            String m=rs.getString("Product_Category");
            model.addRow(new Object[] {n, p, q, pr,s,i,m});
            }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this,e.getMessage());
            }
            }
            else if(jTextField1.getText().length()==0 && jComboBox1.getSelectedIndex()>=1)
            {
                String type=(String)jComboBox1.getSelectedItem();
                String cat=(String)jComboBox2.getSelectedItem();
                String nam=jTextField1.getText();
                DefaultTableModel model= (DefaultTableModel) jTable2.getModel();
          try
            {
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/ip_project","root","admin");
            Statement stmt = (Statement) con.createStatement();
            String d="select * from product where Product_Type='"+type+"';";
            ResultSet rs=stmt.executeQuery(d);
            while(rs.next())
            {
            String n=rs.getString("P_ID");
            String p=rs.getString("Product_Name");
            String q=rs.getString("Seller_Name");
            int pr=rs.getInt("Price");
            String s=rs.getString("Description");
            String i=rs.getString("Product_type");
            String m=rs.getString("Product_Category");
            model.addRow(new Object[] {n, p, q, pr,s,i,m});
            }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this,e.getMessage());
            }
            }
         else if(jComboBox2.getSelectedIndex()>=1)
            {
                String type=(String)jComboBox1.getSelectedItem();
                String cat=(String)jComboBox2.getSelectedItem();
                String nam=jTextField1.getText();
                DefaultTableModel model= (DefaultTableModel) jTable2.getModel();
          try
            {
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/ip_project","root","admin");
            Statement stmt = (Statement) con.createStatement();
            String d="select * from product where Product_type='"+type+"' and Product_Category='"+cat+"' and Product_name like '"+nam+"%';";
            ResultSet rs=stmt.executeQuery(d);
            while(rs.next())
            {
            String n=rs.getString("P_ID");
            String p=rs.getString("Product_Name");
            String q=rs.getString("Seller_Name");
            int pr=rs.getInt("Price");
            String s=rs.getString("Description");
            String i=rs.getString("Product_type");
            String m=rs.getString("Product_Category");
            model.addRow(new Object[] {n, p, q, pr,s,i,m});
            }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this,e.getMessage());
            }
            }
            else if(jComboBox1.getSelectedIndex()==0)
            {
                String type=(String)jComboBox1.getSelectedItem();
                String cat=(String)jComboBox2.getSelectedItem();
                String nam=jTextField1.getText();
                DefaultTableModel model= (DefaultTableModel) jTable2.getModel();
          try
            {
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/ip_project","root","admin");
            Statement stmt = (Statement) con.createStatement();
            String d="select * from product where Product_name like '"+nam+"%';";
            ResultSet rs=stmt.executeQuery(d);
            while(rs.next())
            {
            String n=rs.getString("P_ID");
            String p=rs.getString("Product_Name");
            String q=rs.getString("Seller_Name");
            int pr=rs.getInt("Price");
            String s=rs.getString("Description");
            String i=rs.getString("Product_type");
            String m=rs.getString("Product_Category");
            model.addRow(new Object[] {n, p, q, pr,s,i,m});
            }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this,e.getMessage());
            }
            }
            
        }
        else
        {
            String nam=jTextField1.getText();
            DefaultTableModel model= (DefaultTableModel) jTable2.getModel();
         try
            {
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/ip_project","root","admin");
            Statement stmt = (Statement) con.createStatement();
            String d="select * from product where Product_name like '"+nam+"%';";
            ResultSet rs=stmt.executeQuery(d);
            while(rs.next())
            {
            String n=rs.getString("P_ID");
            String p=rs.getString("Product_Name");
            String q=rs.getString("Seller_Name");
            int pr=rs.getInt("Price");
            String s=rs.getString("Description");
            String i=rs.getString("Product_type");
            String m=rs.getString("Product_Category");
            model.addRow(new Object[] {n, p, q, pr,s,i,m});
            }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this,e.getMessage());
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTable2ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTable2ComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2ComponentAdded

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        String i=(jTable2.getValueAt(jTable2.getSelectedRow(),0)).toString();
        String g=(jTable2.getValueAt(jTable2.getSelectedRow(),1)).toString();
        String name=(jTable2.getValueAt(jTable2.getSelectedRow(),2)).toString();
        String nam=jLabel5.getText();
        int h=(int) (jTable2.getValueAt(jTable2.getSelectedRow(),3));
        int n=1;
        try
            {
            Class.forName("java.sql.DriverManager");
            
            Connection co = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/seller_accounts","root","admin");
            Connection c = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/cart","root","admin");
            Statement stmt = (Statement) c.createStatement();
            String d="select count(*) from "+nam+"cart;";
            ResultSet rs=stmt.executeQuery(d);
            rs.first();
            int a=rs.getInt("count(*)");
            if(a==0)
            {
                Statement s = (Statement) co.createStatement();
                String dc="select quantity from "+name+" where P_ID= '"+i+"';";
                ResultSet rgs=s.executeQuery(dc);
                rgs.first();
                int quantity=rgs.getInt("quantity");
                if(quantity > 0)
                {
                Statement stm = (Statement) c.createStatement();
                String b="insert into "+nam+"cart values('"+i+"','"+g+"','"+n+"','"+h+"');";
                stm.executeUpdate(b);
                JOptionPane.showMessageDialog(this,"Product added to Cart!");
                }
                else if(quantity == 0)
                {
                  JOptionPane.showMessageDialog(this,"Sorry, We are out of stock!");
                }
            }
            else if(a>0)
            {
                
                Statement sy = (Statement) co.createStatement();
                String dc="select Quantity from "+name+" where P_ID = '"+i+"';";
                ResultSet rgs=sy.executeQuery(dc);
                rgs.first();
                int quantity=rgs.getInt("quantity");
                Statement st= (Statement) c.createStatement();
                String dp="select min(Quantity) from "+nam+"cart where P_ID = '"+i+"';";
                ResultSet rsk=st.executeQuery(dp);
                rsk.first();
                int quantit=rsk.getInt("min(quantity)");
                Statement s = (Statement) c.createStatement();
                String z="select * from "+nam+"cart;";
                ResultSet x=s.executeQuery(z);
                if(quantity > quantit)
                {
                while(x.next())
                {
                    String cp=x.getString("P_ID");
                    if(cp.equals(i))
                    {
                         Statement sh = (Statement) c.createStatement();
                         String m="select Quantity from "+nam+"cart where P_ID = '"+i+"';";
                         ResultSet r=sh.executeQuery(m);
                         while(r.next())
                         {
                            int qua= r.getInt("quantity");
                            int ua= qua+1;
                            String o="update "+nam+"cart set Quantity='"+ua+"' where P_ID='"+i+"';";
                            st.executeUpdate(o);
                            JOptionPane.showMessageDialog(this,"Cart Updated!");
                         }
                    }
                  
                    
                }
                
                Statement sk = (Statement) c.createStatement();
                String zk="select count(*) from "+nam+"cart where P_ID = '"+i+"';";
                ResultSet xk=sk.executeQuery(zk);
                xk.first();
                int ck=xk.getInt("count(*)");
                if(ck==0)
                {
                   Statement sv = (Statement) c.createStatement();
                   String m="insert into "+nam+"cart values('"+i+"','"+g+"','"+n+"','"+h+"');";
                   sv.executeUpdate(m);
                   JOptionPane.showMessageDialog(this,"Product added to cart");
                }
                
                
                
            }
                else
                {
                    JOptionPane.showMessageDialog(this,"Sorry, The Product is out of stock.");
                }
            }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this,e.getMessage());
            }
            
    }//GEN-LAST:event_jTable2MouseClicked

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //Cart ca=new Cart();
        String name=jLabel5.getText();
        //ca.jLabel3.setText(name);
        this.setVisible(false);
        new Cart(name).setVisible(true);
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTable2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MouseEntered

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new Welcome_Frame().setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
        String name=jLabel5.getText();
        MyOrders ca=new MyOrders(name);
        this.setVisible(false);
        ca.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Buyer_page_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Buyer_page_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Buyer_page_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Buyer_page_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Buyer_page_1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
